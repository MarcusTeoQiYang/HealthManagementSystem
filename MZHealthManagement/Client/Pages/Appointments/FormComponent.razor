<EditForm Model="@appointment" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class=" form-group">
        <label>Location Name: </label>
        <div>
            <InputText @bind-Value="@appointment.Location" class="form-control" />
            <ValidationMessage For="@(() => appointment.Location)" />
        </div>
    </div>
    <div class="form-group">
        <label>Staff: </label>
        <div>
            <InputSelect @bind-Value="appointment.StaffId" class="form-control">
                <option value="">-- Select Staff --</option>
                @if (Staffs != null)
                {
                    foreach (var staff in Staffs)
                    {
                        <option value="@staff.Id">
                            @staff.Name - @staff.Position
                        </option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => appointment.StaffId)" />
        </div>
    </div>
    <div class="form-group">
        <label>Patient: </label>
        <div>
            <InputSelect @bind-Value="appointment.PatientId" class="form-control">
                <option value="">-- Select Patient --</option>
                @if (Patients != null)
                {
                    foreach (var patient in Patients)
                    {
                        <option value="@patient.Id">
                            @patient.Name @patient.PhoneNo @patient.Gender - @patient.Weight
                        </option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => appointment.PatientId)" />
        </div>
    </div>



    <button type="submit" class="btn btn-success btn-block">
        Create Appointment
    </button>
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Appointment appointment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Patient> Patients;
    private IList<Staff> Staffs;



}
