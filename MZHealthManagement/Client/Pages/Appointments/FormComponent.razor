@inject HttpClient _client
<EditForm Model="@appointment" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">

        <div class=" form-group">
            <label>StaffId: </label>
            <div>
                <InputSelect @bind-Value="appointment.StaffId" class="form-control">
                    <option value="">-- Select Staff --</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.Id">
                                @staff.Name - @staff.PhoneNo
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.StaffId)" />
            </div>
        </div>
        <div class=" form-group">
            <label>Location: </label>
            <div>
                <InputText @bind-Value="@appointment.Location" class="form-control" />
                <ValidationMessage For="@(() => appointment.Location)" />
            </div>
        </div>
        <div class="form-group">
            <label>PatientId: </label>
            <div>
                <InputSelect @bind-Value="appointment.PatientId" class="form-control">
                    <option value="">-- Select Patient --</option>
                    @if (Patients != null)
                    {
                        foreach (var patient in Patients)
                        {
                            <option value="@patient.Id">
                                @patient.Name - @patient.PhoneNo
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.PatientId)" />
           
            </div>
            <div class="form-group">
                <label>Date Out: </label>
                <div>
                    <InputDate @bind-Value="@appointment.DateOut" class="form-control" />
                    <ValidationMessage For="@(() => appointment.DateOut)" />
                </div>
            </div>

            
            
                <div class="form-group">
                    <label>Date In: </label>
                    <div>
                        <InputDate @bind-Value="@appointment.DateIn" class="form-control" />
                        <ValidationMessage For="@(() => appointment.DateIn)" />
                    </div>
                </div>
            
        </div>
    </fieldset>
    <br />
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>}
    <BackToList Target="appointments" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Appointment appointment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Staff> Staffs;
    private IList<Patient> Patients;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>("api/staffs");
        Patients = await _client.GetFromJsonAsync<List<Patient>>("api/patients");
    }


}
